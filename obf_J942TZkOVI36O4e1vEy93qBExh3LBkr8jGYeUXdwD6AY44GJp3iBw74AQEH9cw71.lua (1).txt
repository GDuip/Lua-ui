do local Players=game:GetService("Players");local RunService=game:GetService("RunService");local UserInputService=game:GetService("UserInputService");local Workspace=game:GetService("Workspace");local ReplicatedStorage=game:GetService("ReplicatedStorage");local HttpService=game:GetService("HttpService");local LocalPlayer=Players.LocalPlayer;local Camera=Workspace.CurrentCamera;local Config={SilentAim={Enabled=false,TargetPart="Head",PredictionAmount=0.1,DynamicPrediction=true,TeamCheck=true,BlacklistedPlayers={},WhitelistedPlayers={},AimOffset=Vector2.new(0,0),AimSmoothness=0.2,UseVIM=true,MaxAimJitter=5,AimSwitchDelayMin=0.1,AimSwitchDelayMax=0.3,ReactionTimeMin=0.15,ReactionTimeMax=0.35,FOVRadius=200},AimingSettings={TracerSettings={Enabled=true,Colour=Color3.new(1,0,0),Thickness=2},Bones={Head=0.1,UpperTorso=0.4,LowerTorso=0.3,LeftUpperArm=0.05,LeftLowerArm=0.05,RightUpperArm=0.05,RightLowerArm=0.05},SelectedBone="UpperTorso"},Triggerbot={Enabled=false,Delay=0.05,LastFireTime=0,MaxDistance=10,UseVIM=true,MissProbability=0.1,BurstFire=false,BurstShotsMin=3,BurstShotsMax=5,BurstDelay=0.02,TapFire=false,TapDelay=0.15},ESP={Enabled=false,BoxStyle="Outline",ShowHealthBar=true,ShowDistance=true,ShowNameTags=true,TeamColors=true,OcclusionCheck=true,Color=Color3.fromRGB(255,0,0)},BigHeadMode={Enabled=false},NetworkTampering={Enabled=false,PacketDelayMin=0.01,PacketDelayMax=0.05,UseProxy=false,ProxyKey="MySecretKey",RemoteEventOverrides={RemoteEvent={Fire=function(originalArgs) local modifiedArgs={};if ( #originalArgs>=2) then local targetPosition=originalArgs[1];local damage=originalArgs[2];if (type(targetPosition)=="Vector3") then modifiedArgs[1]=targetPosition + Vector3.new(math.random( -0.05,0.05),math.random( -0.05,0.05),math.random( -0.05,0.05)) ;else modifiedArgs[1]=originalArgs[1];end if (type(damage)=="number") then modifiedArgs[2]=damage * math.random(0.9,1) ;else modifiedArgs[2]=originalArgs[2];end for i=3, #originalArgs do modifiedArgs[i]=originalArgs[i];end else modifiedArgs=originalArgs;end return modifiedArgs;end}}}};local function GetMouseLocation() return UserInputService:GetMouseLocation();end local function FindFirstChild(parent,childName) return parent:FindFirstChild(childName);end local function FindFirstChildWhichIsA(parent,className) return parent:FindFirstChildWhichIsA(className);end local function WorldToViewportPoint(position) if  not position then return nil,false;end return Camera:WorldToViewportPoint(position);end local function xorEncrypt(str,key) local keyLen= #key;local result="";for i=1, #str do local charCode=str:byte(i);local keyCharCode=key:byte(((i-1)%keyLen) + 1 );local encryptedCharCode=bit32.bxor(charCode,keyCharCode);result=result   .. string.char(encryptedCharCode) ;end return result;end local function xorDecrypt(str,key) local keyLen= #key;local result="";for i=1, #str do local charCode=str:byte(i);local keyCharCode=key:byte(((i-1)%keyLen) + 1 );local decryptedCharCode=bit32.bxor(charCode,keyCharCode);result=result   .. string.char(decryptedCharCode) ;end return result;end local function proxyData(data,key) if (type(data)=="string") then local xored=xorEncrypt(data,key);return HttpService:Base64Encode(xored);elseif (type(data)=="table") then local newData={};for k,v in pairs(data) do newData[k]=proxyData(v,key);end return newData;else return data;end end local function unproxyData(data,key) if (type(data)=="string") then local decoded=HttpService:Base64Decode(data);return xorDecrypt(decoded,key);elseif (type(data)=="table") then local newData={};for k,v in pairs(data) do newData[k]=unproxyData(v,key);end return newData;else return data;end end local function easeOutQuad(t) return t * (2 -t) ;end local function GetWeightedRandomBone() local totalWeight=0;for bone,weight in pairs(Config.AimingSettings.Bones) do totalWeight=totalWeight + weight ;end local randomValue=math.random() * totalWeight ;local cumulativeWeight=0;for bone,weight in pairs(Config.AimingSettings.Bones) do cumulativeWeight=cumulativeWeight + weight ;if (randomValue<=cumulativeWeight) then return bone;end end return "UpperTorso";end local function IsPlayerValid(player) if ( not player or  not player.Character or  not player.Character:FindFirstChild("Humanoid")) then return false;end if (player==LocalPlayer) then return false;end if (Config.SilentAim.TeamCheck and (player.Team==LocalPlayer.Team)) then return false;end if player.Character:FindFirstChildOfClass("ForceField") then return false;end if table.find(Config.SilentAim.BlacklistedPlayers,player.Name) then return false;end if (( #Config.SilentAim.WhitelistedPlayers>0) and  not table.find(Config.SilentAim.WhitelistedPlayers,player.Name)) then return false;end return true;end local VIM={};local vim=Instance.new("VirtualInputManager");VIM.SendInput=function(self,inputObject) pcall(function() vim:SendInput(inputObject);end);end;VIM.SimulateKeyPress=function(self,keyCode) local inputObject={KeyCode=keyCode,UserInputType=Enum.UserInputType.Keyboard,UserInputState=Enum.UserInputState.Begin};self:SendInput(inputObject);inputObject.UserInputState=Enum.UserInputState.End;self:SendInput(inputObject);end;VIM.SimulateMouseMove=function(self,position) local inputObject={UserInputType=Enum.UserInputType.MouseMovement,Position=position};self:SendInput(inputObject);end;VIM.SimulateMouseClick=function(self,button,position) local inputObject={UserInputType=button,UserInputState=Enum.UserInputState.Begin,Position=position or GetMouseLocation() };self:SendInput(inputObject);inputObject.UserInputState=Enum.UserInputState.End;self:SendInput(inputObject);end;local Aiming={};Aiming.Selected={Instance=nil,Part=nil,Position=nil,Velocity=nil,OnScreen=false};local Targeting={};Aiming.Targeting=Targeting;Targeting.Priorities={Distance=0.6,Health=0.4};local function PredictPosition(part) if ( not part or  not part:IsA("BasePart")) then return Vector3.new();end local velocity=part.Velocity;local acceleration=Vector3.new(0, -Workspace.Gravity,0);local timeStep=Config.SilentAim.PredictionAmount;if Config.SilentAim.DynamicPrediction then local distance=(part.Position-Camera.CFrame.Position).Magnitude;timeStep=timeStep + (distance/1000) ;end return part.Position + (velocity * timeStep) + (0.5 * acceleration * timeStep * timeStep) ;end local function CalculatePriority(player,localPlayer,mousePosition) local character=player.Character;if  not character then return  -1;end local targetPart=character:FindFirstChild(Config.AimingSettings.SelectedBone);if  not targetPart then return  -1;end local screenPos,onScreen=WorldToViewportPoint(targetPart.Position);if  not onScreen then return  -1;end local distanceToMouse=(Vector2.new(screenPos.X,screenPos.Y) -mousePosition).Magnitude;if (distanceToMouse>Config.SilentAim.FOVRadius) then return  -1;end local distance=(targetPart.Position-localPlayer.Character.HumanoidRootPart.Position).Magnitude;local health=(character:FindFirstChildOfClass("Humanoid") or {Health=0}).Health;local maxDistance=1000;local normalizedDistance=math.min(distance/maxDistance ,1);local normalizedHealth=1 -(health/100) ;local score=(Targeting.Priorities.Distance * normalizedDistance) + (Targeting.Priorities.Health * normalizedHealth) ;return score;end Targeting.GetTarget=function() local bestTarget=nil;local bestScore=math.huge;local mousePosition=GetMouseLocation() + Config.SilentAim.AimOffset ;for _,player in ipairs(Players:GetPlayers()) do if IsPlayerValid(player) then local character=player.Character;if character then local targetBoneName=GetWeightedRandomBone();local targetPart=character:FindFirstChild(targetBoneName);if targetPart then Config.AimingSettings.SelectedBone=targetBoneName;local raycastParams=RaycastParams.new();raycastParams.FilterDescendantsInstances={LocalPlayer.Character};raycastParams.FilterType=Enum.RaycastFilterType.Blacklist;local origin=Camera.CFrame.Position;local direction=(targetPart.Position-origin).Unit * 1000 ;local result=Workspace:Raycast(origin,direction,raycastParams);if (result and result.Instance and result.Instance:IsDescendantOf(character)) then local score=CalculatePriority(player,LocalPlayer,mousePosition);if ((score~= -1) and (score<bestScore)) then bestScore=score;bestTarget=player;end end end end end end return bestTarget;end;Targeting.SetTarget=function() local targetPlayer=Targeting.GetTarget();if (targetPlayer and targetPlayer.Character) then local targetPart=targetPlayer.Character:FindFirstChild(Config.AimingSettings.SelectedBone);if targetPart then Aiming.Selected.Instance=targetPlayer.Character;Aiming.Selected.Part=targetPart;Aiming.Selected.Position=targetPart.Position;Aiming.Selected.Velocity=targetPart.Velocity;Aiming.Selected.OnScreen=true;return;end end Aiming.Selected.Instance=nil;Aiming.Selected.Part=nil;Aiming.Selected.Position=nil;Aiming.Selected.Velocity=nil;Aiming.Selected.OnScreen=false;end;Aiming.Checks={};Aiming.Checks.IsAvailable=function() return (Aiming.Selected.Instance~=nil) and (Aiming.Selected.Part~=nil) and Aiming.Selected.OnScreen ;end;local function GetClosestPlayerToCursor() local closestPlayer=nil;local minDistance=math.huge;local mouseLocation=GetMouseLocation();for _,player in ipairs(Players:GetPlayers()) do if (IsPlayerValid(player) and player.Character) then local targetPart=player.Character:FindFirstChild(Config.AimingSettings.SelectedBone);if targetPart then local screenPos,onScreen=WorldToViewportPoint(targetPart.Position);if onScreen then local distance=(Vector2.new(screenPos.X,screenPos.Y) -mouseLocation).Magnitude;if (distance<minDistance) then minDistance=distance;closestPlayer=player;end end end end end return closestPlayer;end local function getNearestHead() local closestPlayer=nil;local shortestDistance=math.huge;if ( not LocalPlayer.Character or  not LocalPlayer.Character:FindFirstChild("HumanoidRootPart")) then return nil,nil;end for _,player in ipairs(Players:GetPlayers()) do if (IsPlayerValid(player) and player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then local targetPart=player.Character:FindFirstChild(Config.AimingSettings.SelectedBone);if targetPart then local distance=(targetPart.Position-LocalPlayer.Character.HumanoidRootPart.Position).Magnitude;if (distance<shortestDistance) then shortestDistance=distance;closestPlayer=player;end end end end if (closestPlayer and closestPlayer.Character) then local targetPart=closestPlayer.Character:FindFirstChild(Config.AimingSettings.SelectedBone);if targetPart then return targetPart,closestPlayer;end end return nil,nil;end local Triggerbot={};local currentBurstCount=0;local lastFireTime=0;local function CanFire() if Config.Triggerbot.BurstFire then if (currentBurstCount==0) then currentBurstCount=math.random(Config.Triggerbot.BurstShotsMin,Config.Triggerbot.BurstShotsMax);return true;elseif ((currentBurstCount>0) and ((os.clock() -lastFireTime)>Config.Triggerbot.BurstDelay)) then return true;else return false;end elseif Config.Triggerbot.TapFire then return (os.clock() -Config.Triggerbot.LastFireTime)>Config.Triggerbot.TapDelay ;else return (os.clock() -Config.Triggerbot.LastFireTime)>Config.Triggerbot.Delay ;end end local function FireWeapon(targetPart) local remotes=ReplicatedStorage:FindFirstChild("Remotes");if remotes then local attackRemote=remotes:FindFirstChild("Attack");if attackRemote then if Config.Triggerbot.UseVIM then local screenPos,onScreen=WorldToViewportPoint(targetPart.Position);if onScreen then if (math.random()>Config.Triggerbot.MissProbability) then VIM:SimulateMouseClick(Enum.UserInputType.MouseButton1,Vector2.new(screenPos.X,screenPos.Y));if Config.Triggerbot.BurstFire then currentBurstCount=currentBurstCount-1 ;end end end elseif (math.random()>Config.Triggerbot.MissProbability) then attackRemote:FireServer(targetPart);if Config.Triggerbot.BurstFire then currentBurstCount=currentBurstCount-1 ;end end lastFireTime=os.clock();Config.Triggerbot.LastFireTime=os.clock();else warn("Attack remote not found!");end else warn("Remotes folder not found!");end end local ESP={};local existingHighlights={};local connections={};local function cleanupHighlight(player) if existingHighlights[player] then existingHighlights[player]:Destroy();existingHighlights[player]=nil;end if connections[player] then connections[player]:Disconnect();connections[player]=nil;end end local function createHighlight(player) if existingHighlights[player] then return;end local highlight;if (Config.ESP.BoxStyle=="3D") then highlight=Instance.new("BoxHandleAdornment");highlight.Size=Vector3.new(2,4,1);else highlight=Instance.new("BoxHandleAdornment");highlight.Size=Vector3.new(2,4,1);end highlight.Name="PlayerHighlight";highlight.Adornee=player.Character;highlight.ZIndex=10;highlight.AlwaysOnTop=true;highlight.Color3=Config.ESP.Color or Color3.fromRGB(255,0,0) ;highlight.Transparency=((Config.ESP.BoxStyle=="Filled") and 0.5) or 0 ;highlight.Visible=false;if player.Character then highlight.Parent=player.Character;end local healthBar=Instance.new("BillboardGui");healthBar.Name="HealthBar";healthBar.Size=UDim2.new(0,50,0,5);healthBar.StudsOffset=Vector3.new(0,3,0);healthBar.AlwaysOnTop=true;healthBar.Parent=highlight;local healthBarFrame=Instance.new("Frame");healthBarFrame.Size=UDim2.new(1,0,1,0);healthBarFrame.BackgroundColor3=Color3.new(0,1,0);healthBarFrame.BorderSizePixel=0;healthBarFrame.Parent=healthBar;local nameTag=Instance.new("TextLabel");nameTag.Name="NameTag";nameTag.Size=UDim2.new(0,100,0,20);nameTag.TextScaled=true;nameTag.BackgroundTransparency=1;nameTag.TextColor3=Color3.new(1,1,1);nameTag.TextStrokeTransparency=0;nameTag.TextStrokeColor3=Color3.new(0,0,0);nameTag.Parent=highlight;nameTag.Text=player.Name;local distanceTag=Instance.new("TextLabel");distanceTag.Name="DistanceTag";distanceTag.Size=UDim2.new(0,100,0,20);distanceTag.Position=UDim2.new(0,0,1,0);distanceTag.TextScaled=true;distanceTag.BackgroundTransparency=1;distanceTag.TextColor3=Color3.new(1,1,1);distanceTag.TextStrokeTransparency=0;distanceTag.TextStrokeColor3=Color3.new(0,0,0);distanceTag.Parent=highlight;local updateConnection;updateConnection=game:GetService("RunService").RenderStepped:Connect(function() if ( not player or  not player.Character or  not player.Character.PrimaryPart) then cleanupHighlight(player);return;end if (player==game.Players.LocalPlayer) then highlight.Visible=false;healthBar.Enabled=false;nameTag.Visible=false;distanceTag.Visible=false;return;end if (Config.ESP.TeamColors and (player.Team==game.Players.LocalPlayer.Team)) then highlight.Visible=false;healthBar.Enabled=false;nameTag.Visible=false;distanceTag.Visible=false;return;end local humanoid=player.Character:FindFirstChildOfClass("Humanoid");if humanoid then healthBarFrame.Size=UDim2.new(humanoid.Health/humanoid.MaxHealth ,0,1,0);healthBarFrame.BackgroundColor3=(((humanoid.Health/humanoid.MaxHealth)>0.5) and Color3.new(0,1,0)) or Color3.new(1,0,0) ;end if Config.ESP.OcclusionCheck then local raycastParams=RaycastParams.new();raycastParams.FilterDescendantsInstances={LocalPlayer.Character};raycastParams.FilterType=Enum.RaycastFilterType.Blacklist;local origin=Camera.CFrame.Position;local direction=(player.Character.HumanoidRootPart.Position-origin).Unit * 1000 ;local result=Workspace:Raycast(origin,direction,raycastParams);if (result and result.Instance and result.Instance:IsDescendantOf(player.Character)) then highlight.Visible=true;nameTag.Visible=true;healthBar.Enabled=true;distanceTag.Visible=true;else highlight.Visible=false;nameTag.Visible=false;healthBar.Enabled=false;distanceTag.Visible=false;end else highlight.Visible=true;nameTag.Visible=true;healthBar.Enabled=true;distanceTag.Visible=true;end local distance=(LocalPlayer.Character.HumanoidRootPart.Position-player.Character.HumanoidRootPart.Position).Magnitude;distanceTag.Text=string.format("%.1f",distance);end);connections[player]=updateConnection;existingHighlights[player]=highlight;end local NetworkTampering={};local BigHeadMode={};local function activateBigHeadMode(enabled) local function applyBigHead(character) local humanoid=character:FindFirstChildOfClass("Humanoid");if humanoid then local description=humanoid:GetAppliedDescription();description.HeadScale=(enabled and 5) or 1 ;description.BodyHeightScale=(enabled and 5) or 1 ;description.BodyWidthScale=(enabled and 5) or 1 ;description.BodyDepthScale=(enabled and 5) or 1 ;humanoid:ApplyDescription(description);end end for _,player in ipairs(Players:GetPlayers()) do if ((player~=LocalPlayer) and player.Character) then applyBigHead(player.Character);end end Players.PlayerAdded:Connect(function(newPlayer) if (newPlayer~=LocalPlayer) then newPlayer.CharacterAdded:Connect(function(character) applyBigHead(character);end);end end);end local oldNamecall;local success,result=pcall(function() oldNamecall=hookmetamethod(game,"__namecall",function(self,...) local method=getnamecallmethod();local args={...};if (Config.SilentAim.Enabled and  not checkcaller()) then if ((method=="FindPartOnRayWithIgnoreList") or (method=="FindPartOnRayWithWhitelist") or (method=="Raycast")) then local closestPlayer=GetClosestPlayerToCursor();if (closestPlayer and closestPlayer.Character) then local targetPart=closestPlayer.Character:FindFirstChild(Config.AimingSettings.SelectedBone);if targetPart then local targetPosition=PredictPosition(targetPart);if targetPosition then local distance=(targetPosition-args[1]).Magnitude;args[2]=(targetPosition-args[1]).Unit * distance ;end end end end end if (Config.NetworkTampering.Enabled and (method=="FireServer")) then local delay=math.random(Config.NetworkTampering.PacketDelayMin,Config.NetworkTampering.PacketDelayMax);wait(delay);local remoteName=self.Name;local methodName=args[1];if (Config.NetworkTampering.RemoteEventOverrides[remoteName] and Config.NetworkTampering.RemoteEventOverrides[remoteName][methodName]) then local overrideFunc=Config.NetworkTampering.RemoteEventOverrides[remoteName][methodName];args=overrideFunc(args);end if Config.NetworkTampering.UseProxy then for i=2, #args do args[i]=proxyData(args[i],Config.NetworkTampering.ProxyKey);end end end return oldNamecall(self,unpack(args));end);end);if  not success then warn("Error in hookmetamethod:",result);end local OrionLib=loadstring(game:HttpGet("https://raw.githubusercontent.com/kigredns/testUIDK/refs/heads/main/SourceCodeUI"))();local Window=OrionLib:MakeWindow({Name="H4X",HidePremium=false,SaveConfig=true,ConfigFolder="H4X"});local MainTab=Window:MakeTab({Name="Main",Icon="rbxassetid://4483345998",PremiumOnly=false});local SilentAimSection=MainTab:AddSection({Name="Silent Aim"});local SilentAimToggle=SilentAimSection:AddToggle({Name="Enable Silent Aim",Default=Config.SilentAim.Enabled,Callback=function(state) Config.SilentAim.Enabled=state;end});local UseVIMToggleSA=SilentAimSection:AddToggle({Name="Use VIM (Silent Aim)",Default=Config.SilentAim.UseVIM,Callback=function(state) Config.SilentAim.UseVIM=state;end});local BigHeadToggle=SilentAimSection:AddToggle({Name="Big Head Mode",Default=Config.BigHeadMode.Enabled,Callback=function(state) Config.BigHeadMode.Enabled=state;activateBigHeadMode(state);end});local TracerToggle=SilentAimSection:AddToggle({Name="Tracer",Default=Config.AimingSettings.TracerSettings.Enabled,Callback=function(state) Config.AimingSettings.TracerSettings.Enabled=state;end});local TriggerbotSection=MainTab:AddSection({Name="Triggerbot"});local TriggerbotToggle=TriggerbotSection:AddToggle({Name="Triggerbot",Default=Config.Triggerbot.Enabled,Callback=function(state) Config.Triggerbot.Enabled=state;end});local UseVIMToggleTB=TriggerbotSection:AddToggle({Name="Use VIM (Triggerbot)",Default=Config.Triggerbot.UseVIM,Callback=function(state) Config.Triggerbot.UseVIM=state;end});local TriggerbotMissProbabilitySlider=TriggerbotSection:AddSlider({Name="Miss Probability",Min=0,Max=1,Default=Config.Triggerbot.MissProbability,Callback=function(value) Config.Triggerbot.MissProbability=value;end});local TriggerbotTapFireToggle=TriggerbotSection:AddToggle({Name="Tap Fire",Default=Config.Triggerbot.TapFire,Callback=function(state) Config.Triggerbot.TapFire=state;Config.Triggerbot.BurstFire= not state;end});local TriggerbotTapDelaySlider=TriggerbotSection:AddSlider({Name="Tap Delay",Min=0.01,Max=1,Default=Config.Triggerbot.TapDelay,Callback=function(value) Config.Triggerbot.TapDelay=value;end});local TriggerbotBurstFireToggle=TriggerbotSection:AddToggle({Name="Burst Fire",Default=Config.Triggerbot.BurstFire,Callback=function(state) Config.Triggerbot.BurstFire=state;Config.Triggerbot.TapFire= not state;end});local TriggerbotBurstShotsMinSlider=TriggerbotSection:AddSlider({Name="Burst Shots Min",Min=1,Max=10,Default=Config.Triggerbot.BurstShotsMin,Callback=function(value) Config.Triggerbot.BurstShotsMin=value;end});local TriggerbotBurstShotsMaxSlider=TriggerbotSection:AddSlider({Name="Burst Shots Max",Min=1,Max=20,Default=Config.Triggerbot.BurstShotsMax,Callback=function(value) Config.Triggerbot.BurstShotsMax=value;end});local TriggerbotBurstDelaySlider=TriggerbotSection:AddSlider({Name="Burst Delay",Min=0.01,Max=0.5,Default=Config.Triggerbot.BurstDelay,Callback=function(value) Config.Triggerbot.BurstDelay=value;end});local ESPTab=Window:MakeTab({Name="ESP",Icon="rbxassetid://4483345998",PremiumOnly=false});local ESPSection=ESPTab:AddSection({Name="ESP"});local ESPToggle=ESPSection:AddToggle({Name="ESP",Default=Config.ESP.Enabled,Callback=function(state) Config.ESP.Enabled=state;if state then for _,player in pairs(game.Players:GetPlayers()) do if ((player~=game.Players.LocalPlayer) and (player.Team~=game.Players.LocalPlayer.Team)) then if  not existingHighlights[player] then createHighlight(player);end end end else for player,_ in pairs(existingHighlights) do cleanupHighlight(player);end end end});local ESPBoxStyleDropdown=ESPSection:AddDropdown({Name="Box Style",Default=Config.ESP.BoxStyle,Options={"Outline","Filled","3D"},Callback=function(value) Config.ESP.BoxStyle=value;end});local ESPHealthBarToggle=ESPSection:AddToggle({Name="Show Health Bar",Default=Config.ESP.ShowHealthBar,Callback=function(state) Config.ESP.ShowHealthBar=state;end});local ESPDistanceToggle=ESPSection:AddToggle({Name="Show Distance",Default=Config.ESP.ShowDistance,Callback=function(state) Config.ESP.ShowDistance=state;end});local ESPNameTagsToggle=ESPSection:AddToggle({Name="Show Name Tags",Default=Config.ESP.ShowNameTags,Callback=function(state) Config.ESP.ShowNameTags=state;end});local ESPTeamColorsToggle=ESPSection:AddToggle({Name="Team Colors",Default=Config.ESP.TeamColors,Callback=function(state) Config.ESP.TeamColors=state;end});local ESPOcclusionCheckToggle=ESPSection:AddToggle({Name="Occlusion Check",Default=Config.ESP.OcclusionCheck,Callback=function(state) Config.ESP.OcclusionCheck=state;end});local ESPColorPicker=ESPSection:AddColorpicker({Name="ESP Color",Default=Config.ESP.Color,Callback=function(color) Config.ESP.Color=color;for player,highlight in pairs(existingHighlights) do if highlight then highlight.Color3=color;end end end});local NetworkTab=Window:MakeTab({Name="Network",Icon="rbxassetid://4483345998",PremiumOnly=false});local NetworkSection=NetworkTab:AddSection({Name="Network Tampering"});local NetworkTamperingToggle=NetworkSection:AddToggle({Name="Network Tampering",Default=Config.NetworkTampering.Enabled,Callback=function(state) Config.NetworkTampering.Enabled=state;end});local UseProxyToggle=NetworkSection:AddToggle({Name="Use Proxy/Encrypt",Default=Config.NetworkTampering.UseProxy,Callback=function(state) Config.NetworkTampering.UseProxy=state;end});local PacketDelayMinSlider=NetworkSection:AddSlider({Name="Packet Delay Min (s)",Min=0,Max=1,Default=Config.NetworkTampering.PacketDelayMin,Callback=function(value) Config.NetworkTampering.PacketDelayMin=value;end});local PacketDelayMaxSlider=NetworkSection:AddSlider({Name="Packet Delay Max (s)",Min=0,Max=1,Default=Config.NetworkTampering.PacketDelayMax,Callback=function(value) Config.NetworkTampering.PacketDelayMax=value;end});local ProxyKeyTextbox=NetworkSection:AddTextbox({Name="Proxy Key",Default=Config.NetworkTampering.ProxyKey,Callback=function(value) Config.NetworkTampering.ProxyKey=value;end});local SettingsTab=Window:MakeTab({Name="Settings",Icon="rbxassetid://4483345998",PremiumOnly=false});local SettingsAim=SettingsTab:AddSection({Name="Aim Settings"});local SettingsVisual=SettingsTab:AddSection({Name="Visual Settings"});local PredictionAmountSlider=SettingsAim:AddSlider({Name="Prediction Amount",Min=0,Max=1,Default=Config.SilentAim.PredictionAmount,Callback=function(value) Config.SilentAim.PredictionAmount=value;end});local DynamicPredictionToggle=SettingsAim:AddToggle({Name="Dynamic Prediction",Default=Config.SilentAim.DynamicPrediction,Callback=function(state) Config.SilentAim.DynamicPrediction=state;end});local AimSmoothnessSlider=SettingsAim:AddSlider({Name="Aim Smoothness",Min=0,Max=1,Default=Config.SilentAim.AimSmoothness,Callback=function(value) Config.SilentAim.AimSmoothness=value;end});local FOVRadiusSlider=SettingsAim:AddSlider({Name="FOV Radius",Min=50,Max=500,Default=Config.SilentAim.FOVRadius,Callback=function(value) Config.SilentAim.FOVRadius=value;end});local MaxAimJitterSlider=SettingsAim:AddSlider({Name="Max Aim Jitter",Min=0,Max=20,Default=Config.SilentAim.MaxAimJitter,Callback=function(value) Config.SilentAim.MaxAimJitter=value;end});local ReactionTimeMinSlider=SettingsAim:AddSlider({Name="Reaction Time Min",Min=0,Max=1,Default=Config.SilentAim.ReactionTimeMin,Callback=function(value) Config.SilentAim.ReactionTimeMin=value;end});local ReactionTimeMaxSlider=SettingsAim:AddSlider({Name="Reaction Time Max",Min=0,Max=1,Default=Config.SilentAim.ReactionTimeMax,Callback=function(value) Config.SilentAim.ReactionTimeMax=value;end});local AimOffsetXTextbox=SettingsAim:AddTextbox({Name="Aim Offset X",Default=tostring(Config.SilentAim.AimOffset.X),Callback=function(value) local num=tonumber(value);if num then Config.SilentAim.AimOffset=Vector2.new(num,Config.SilentAim.AimOffset.Y);end end});local AimOffsetYTextbox=SettingsAim:AddTextbox({Name="Aim Offset Y",Default=tostring(Config.SilentAim.AimOffset.Y),Callback=function(value) local num=tonumber(value);if num then Config.SilentAim.AimOffset=Vector2.new(Config.SilentAim.AimOffset.X,num);end end});local TargetBoneDropdown=SettingsAim:AddDropdown({Name="Target Bone",Default=Config.AimingSettings.SelectedBone,Options={"Head","UpperTorso","LowerTorso","LeftUpperArm","LeftLowerArm","RightUpperArm","RightLowerArm"},Callback=function(value) Config.AimingSettings.SelectedBone=value;end});local TracerColorPicker=SettingsVisual:AddColorpicker({Name="Tracer Color",Default=Config.AimingSettings.TracerSettings.Colour,Callback=function(color) Config.AimingSettings.TracerSettings.Colour=color;end});local BindTab=Window:MakeTab({Name="Binds",Icon="rbxassetid://4483345998",PremiumOnly=false});local ToggleSilentAimBind=BindTab:AddBind({Name="Toggle Silent Aim",Default=Enum.KeyCode.B,Hold=false,Callback=function() Config.SilentAim.Enabled= not Config.SilentAim.Enabled;SilentAimToggle:Set(Config.SilentAim.Enabled);end});local playerCountLabel=MainTab:AddLabel("Player Count: ...");local function updatePlayerCount() local players=Players:GetPlayers();playerCountLabel:SetText("Player Count: "   ..  #players );end updatePlayerCount();Players.PlayerAdded:Connect(updatePlayerCount);Players.PlayerRemoving:Connect(updatePlayerCount);local function createTracer() local tracer=Instance.new("Beam");tracer.Parent=Workspace;tracer.Width0=Config.AimingSettings.TracerSettings.Thickness;tracer.Width1=Config.AimingSettings.TracerSettings.Thickness;RunService.RenderStepped:Connect(function(deltaTime) local Settings=Config.AimingSettings.TracerSettings;local Position=Aiming.Selected.Position;local IsValid=Aiming.Checks.IsAvailable();if (IsValid and Position) then tracer.Visible=Settings.Enabled;tracer.Color=ColorSequence.new(Settings.Colour);if  not tracer.Attachment0 then tracer.Attachment0=Instance.new("Attachment");tracer.Attachment0.Parent=Camera;end if tracer.Attachment0 then tracer.Attachment0.WorldPosition=Camera.CFrame.Position;end if  not tracer.Attachment1 then tracer.Attachment1=Instance.new("Attachment");tracer.Attachment1.Parent=Aiming.Selected.Part;end if tracer.Attachment1 then tracer.Attachment1.WorldPosition=Position;end else tracer.Visible=false;if tracer.Attachment0 then tracer.Attachment0:Destroy();end if tracer.Attachment1 then tracer.Attachment1:Destroy();end end end);return tracer;end local tracer=createTracer();local isMouseButtonDown=false;UserInputService.InputBegan:Connect(function(input,gameProcessedEvent) if gameProcessedEvent then return;end if (input.UserInputType==Enum.UserInputType.MouseButton1) then isMouseButtonDown=true;end end);UserInputService.InputEnded:Connect(function(input,gameProcessedEvent) if gameProcessedEvent then return;end if (input.UserInputType==Enum.UserInputType.MouseButton1) then isMouseButtonDown=false;end end);Targeting.SetTarget();RunService.RenderStepped:Connect(Targeting.SetTarget);local lastTarget=nil;local lastAimTime=0;RunService.RenderStepped:Connect(function() if (Config.SilentAim.Enabled and isMouseButtonDown) then local targetHead,closestPlayer=getNearestHead();if (closestPlayer and (closestPlayer~=lastTarget)) then lastTarget=closestPlayer;lastAimTime=os.clock() + math.random(Config.SilentAim.ReactionTimeMin,Config.SilentAim.ReactionTimeMax) ;end if (targetHead and (os.clock()>=lastAimTime)) then if (closestPlayer~=lastTarget) then local switchDelay=math.random(Config.SilentAim.AimSwitchDelayMin,Config.SilentAim.AimSwitchDelayMax);wait(switchDelay);lastTarget=closestPlayer;end local aimPosition=PredictPosition(targetHead);if Config.SilentAim.UseVIM then local screenPos,onScreen=WorldToViewportPoint(aimPosition);if onScreen then local currentMousePos=GetMouseLocation();local delta=(Vector2.new(screenPos.X,screenPos.Y) -currentMousePos) * easeOutQuad(Config.SilentAim.AimSmoothness) ;local jitterX=(math.random() -0.5) * Config.SilentAim.MaxAimJitter ;local jitterY=(math.random() -0.5) * Config.SilentAim.MaxAimJitter ;local newMousePos=currentMousePos + delta + Vector2.new(jitterX,jitterY) ;VIM:SimulateMouseMove(newMousePos);end else local currentCFrame=Camera.CFrame;local targetCFrame=CFrame.lookAt(currentCFrame.Position,aimPosition);Camera.CFrame=currentCFrame:Lerp(targetCFrame,easeOutQuad(Config.SilentAim.AimSmoothness));end end end if (Config.Triggerbot.Enabled and Aiming.Selected.Part and CanFire()) then local screenPos,onScreen=WorldToViewportPoint(Aiming.Selected.Part.Position);if onScreen then local mousePosition=GetMouseLocation();local distance=(Vector2.new(screenPos.X,screenPos.Y) -mousePosition).Magnitude;if (distance<Config.Triggerbot.MaxDistance) then FireWeapon(Aiming.Selected.Part);end end end end);game.Players.PlayerAdded:Connect(function(player) player.CharacterAdded:Connect(function() if ((player~=game.Players.LocalPlayer) and (player.Team~=game.Players.LocalPlayer.Team)) then if (Config.ESP.Enabled and  not existingHighlights[player]) then createHighlight(player);end end end);player.CharacterRemoving:Connect(function() cleanupHighlight(player);end);end);game.Players.PlayerRemoving:Connect(function(player) cleanupHighlight(player);end);OrionLib:Init();local function getNearestPlayerWithHitbox() local closestPlayer=nil;local shortestDistance=math.huge;if ( not LocalPlayer.Character or  not LocalPlayer.Character:FindFirstChild("HumanoidRootPart")) then return nil;end local localPlayerPos=LocalPlayer.Character.HumanoidRootPart.Position;for _,v in pairs(game.Players:GetPlayers()) do if ((v.Name~=game.Players.LocalPlayer.Name) and v.Character and v.Character:FindFirstChild("HumanoidRootPart")) then local hitboxPart=v.Character.HumanoidRootPart;local distance=(hitboxPart.Position-localPlayerPos).Magnitude;if (distance<shortestDistance) then shortestDistance=distance;closestPlayer=v;end end end return closestPlayer;end local function expandHitboxes() for _,v in pairs(game.Players:GetPlayers()) do if ((v.Name~=game.Players.LocalPlayer.Name) and v.Character) then local partsToExpand={"RightUpperLeg","LeftUpperLeg","Head","HumanoidRootPart"};for _,partName in pairs(partsToExpand) do local part=v.Character:FindFirstChild(partName);if part then part.CanCollide=false;part.Transparency=1;part.Size=Vector3.new(27,27,27);end end end end end local function performRaycast(origin,direction,targetPlayer) local raycastParams=RaycastParams.new();raycastParams.FilterDescendantsInstances={targetPlayer.Character};raycastParams.FilterType=Enum.RaycastFilterType.Whitelist;local result=workspace:Raycast(origin,direction,raycastParams);if (result and result.Instance and result.Instance:IsDescendantOf(targetPlayer.Character)) then return true;end return false;end local function shootAtNearestTarget() local target=getNearestPlayerWithHitbox();if (target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")) then local hitboxPart=target.Character.HumanoidRootPart;local origin=game.Players.LocalPlayer.Character.HumanoidRootPart.Position;local direction=(hitboxPart.Position-origin).unit * 500 ;if performRaycast(origin,direction,target) then end end end local function modifyWeaponStats() for _,weapon in pairs(ReplicatedStorage.Weapons:GetChildren()) do if weapon:IsA("Folder") then for _,v in pairs(weapon:GetChildren()) do if ((v.ClassName=="IntValue") or (v.ClassName=="NumberValue")) then if (v.Name=="RecoilControl") then v.Value=0.05;elseif (v.Name=="Spread") then v.Value=0.01;elseif (v.Name=="MaxSpread") then v.Value=0.01;elseif (v.Name=="SpreadRecovery") then v.Value=0.01;elseif (v.Name=="FireRate") then v.Value=0.05;elseif (v.Name=="Ammo") then v.Value=999;elseif (v.Name=="ReloadTime") then v.Value=0.01;elseif (v.Name=="Falloff") then v.Value=3000;elseif (v.Name=="Speed%") then v.Value=1;elseif (v.Name=="Range") then v.Value=2000;elseif (v.Name=="Auto") then v.Value=true;elseif (v.Name=="EquipTime") then v.Value=0;elseif (v.Name=="SelfDamage") then v.Value=0;elseif (v.Name=="ChargeTime") then v.Value=0.01;elseif (v.Name=="SFireRate") then v.Value=0.05;elseif (v.Name=="BlastRadius") then v.Value=125;elseif (v.Name=="BulletSpeed") then v.Value=7500;elseif (v.Name=="Bullet") then v.Value=6;end end end end end end local success,result=pcall(modifyWeaponStats);if  not success then warn("Error modifying weapon stats:",result);end while wait(1) do expandHitboxes();shootAtNearestTarget();end setfpscap(999);game:GetService("RunService").Stepped:Connect(function() setfpscap(999);end); end